services:
  db:
    image: timescale/timescaledb:latest-pg14
    container_name: timescaledb
    environment:
      POSTGRES_DB: fitbit-hr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgresql:/var/lib/postgresql/data
    networks:
      - timescale_network
    restart: unless-stopped

  init_db:
    build:
      context: .
      dockerfile: db-init-service/Dockerfile
    container_name: db-init-service
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: fitbit-hr
      DB_PORT: 5432
      DB_HOST: db
      USER_ID: user1
      DATA_SEED: 0
    depends_on:
      - db
    networks:
      - timescale_network
    restart: "no"

  ingestion_user1:
    build:
      context: .
      dockerfile: ingestion-service/Dockerfile
    container_name: ingestion-user1
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: fitbit-hr
      DB_PORT: 5432
      DB_HOST: db
      USER_ID: user1
      DATA_SEED: 23
      START_DATE: "2025-06-15"
    depends_on:
      - db
      - init_db
    networks:
      - timescale_network
    restart: unless-stopped

  ingestion_user2:
    build:
      context: .
      dockerfile: ingestion-service/Dockerfile
    container_name: ingestion-user2
    environment:
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: fitbit-hr
      DB_PORT: 5432
      DB_HOST: db
      USER_ID: user2
      DATA_SEED: 37
      START_DATE: "2025-06-15"
    depends_on:
      - db
      - init_db
    networks:
      - timescale_network
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: api-service
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: fitbit-hr
      DB_USER: postgres
      DB_PASSWORD: password
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - timescale_network
    restart: unless-stopped

  client:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: client-service
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - timescale_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - timescale_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - timescale_network
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - timescale_network
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
    networks:
      - timescale_network
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    privileged: true
    networks:
      - timescale_network
    restart: unless-stopped

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:password@db:5432/fitbit-hr?sslmode=disable"
    networks:
      - timescale_network
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:


networks:
  timescale_network:
    driver: bridge
